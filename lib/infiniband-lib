#!/bin/bash

function maas-ib-check-pci() {
	maas-ssh "lspci | grep -i mellanox"
}

function maas-ib-prepare() {
	echo ""
	echo "InfiniBand: Prepare"
	echo ""
	maas-ssh "sudo apt-get install perl dpkg autotools-dev autoconf libtool automake1.10 automake m4 dkms debhelper tcl chrpath swig graphviz tcl-dev tk-dev bison flex dpatch zlib1g-dev curl libcurl4-gnutls-dev python-libxml2 libvirt0 libglib2.0-dev automake m4 pkg-config logrotate ethtool -y"
}

MLNX_OFED_PKG=MLNX_OFED_LINUX-5.2-2.2.0.0-ubuntu20.04-x86_64
MLNX_OFED_PKG_TAR=$MLNX_OFED_PKG.tgz

function maas-ib-copy-mlnx-ofed() {
	echo ""
	echo "InfiniBand : Copy MLNX-OFED"
	echo ""
	#wget "http://180.210.14.253/ds-download/MLNX_OFED_LINUX-5.2-2.2.0.0-ubuntu20.04-x86_64.tgz -O ../output/MLNX_OFED_LINUX-5.2-2.2.0.0-ubuntu20.04-x86_64.tgz"
	if ! [ -f $OUTPUT/$MLNX_OFED_PKG_TAR ]; then 
		echo "wget http://180.210.14.253/ds-download/$MLNX_OFED_PKG_TAR -O $OUTPUT/$MLNX_OFED_PKG_TAR"
        wget http://180.210.14.253/ds-download/$MLNX_OFED_PKG_TAR -O $OUTPUT/$MLNX_OFED_PKG_TAR
	fi
	if [ -f $OUTPUT/$MLNX_OFED_PKG_TAR ]; then 
		maas-scp $OUTPUT/$MLNX_OFED_PKG_TAR
		maas-ssh "tar -xvf $MLNX_OFED_PKG_TAR"
	fi
}

function maas-ib-install-mlnx-ofed() {
	echo ""
	echo "InfiniBand : Install MLNX-OFED"
	echo ""
	maas-ssh "cd $MLNX_OFED_PKG; sudo ./mlnxofedinstall --force"
}

function maas-ib-restart-openibd() {
	echo ""
	echo "InfiniBand : Restart openibd"
	echo ""
	maas-ssh "sudo /etc/init.d/openibd restart"
}

function maas-ib-devinfo() {
	echo ""
	echo "InfiniBand : devinfo"
	echo ""
	maas-ssh "sudo ibv_devinfo"
}

NVIDIA_CUDA=cuda_11.0.2_450.51.05_linux.run
NVIDIA_GPU_DIRECT=gpudirect-storage-local-repo-ubuntu2004-cuda-11.0-0.9.1_0.9.1-1_amd64.deb 
function maas-nvidia-copy-driver() {


	if ! [ -f $OUTPUT/$NVIDIA_CUDA ]; then 
        echo "wget http://180.210.14.253/ds-download/$NVDIA_CUDA -O $OUTPUT/$NVDIA_CUDA"
        wget http://180.210.14.253/ds-download/$NVDIA_CUDA -O $OUTPUT/$NVDIA_CUDA
    fi

	if ! [ -f $OUTPUT/$NVIDIA_GPU_DIRECT ]; then 
        echo "wget http://180.210.14.253/ds-download/$NVIDIA_GPU_DIRECT -O $OUTPUT/$NVIDIA_GPU_DIRECT"
        wget http://180.210.14.253/ds-download/$NVIDIA_GPU_DIRECT -O $OUTPUT/$NVIDIA_GPU_DIRECT
    fi

	check-maas-store

	for line in $(cat $MAAS_STORE |grep ' on ' | awk '{ print $1 ","$4 }') ; do 
		line=$(echo $line | awk -F ',' '{print $1" "$2}')
		read -r NODE ADDR <<<$(echo $line)

		echo "#-----------------------------------------------------------------------------------"
		echo "# $NODE: $ADDR" 
        if [ -z ${NODE##*"deploy"*} ] ;then
		    echo "--> skip" 
            continue
        fi
        if [ -z ${NODE##*"controller"*} ] ;then
		    echo "--> skip" 
            continue
        fi
        if [ -z ${NODE##*"storage"*} ] ;then
		    echo "--> skip" 
            continue
        fi
        if [ -z ${NODE##*"ceph"*} ] ;then
		    echo "--> skip" 
            continue
        fi
	    if [ -f $OUTPUT/$NVIDIA_CUDA ]; then 
	        ARGS=$OUTPUT/$NVIDIA_CUDA
		    echo "sshpass scp -o StrictHostKeyChecking=no $ARGS ubuntu@$ADDR:"
		    sshpass scp -o StrictHostKeyChecking=no $ARGS ubuntu@$ADDR:
        fi
	    if [ -f $OUTPUT/$NVIDIA_GPU_DIRECT ]; then 
	        ARGS=$OUTPUT/$NVIDIA_GPU_DIRECT
		    echo "sshpass scp -o StrictHostKeyChecking=no $ARGS ubuntu@$ADDR:"
		    sshpass scp -o StrictHostKeyChecking=no $ARGS ubuntu@$ADDR:
        fi
    done 
}



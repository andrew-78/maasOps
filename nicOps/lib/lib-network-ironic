#!/bin/bash

function make_network_ironic1()
{
    EX_ADDR=$1
    EX_GW_ADDR=$2
    MGMT_ADDR=$3
    STORAGE_ADDR=$4
    VXLAN_ADDR=$5
    REPLICA_ADDR=$6
    VLAN_ADDR=$7
    NODE=$8

    NET_STR="# CONTROLLER $NODE : generated by devstack
#
# This file is generated from information provided by the datasource.  Changes
# to it will not persist across an instance reboot.  To disable cloud-init's
# network configuration capabilities, write a file
# /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg with the following:
# network: {config: disabled}
network:
    ethernets:
        eno1:
            addresses:
            - 10.2.0.233/24
            match:
                macaddress: 24:6e:96:26:af:4c
            mtu: 1500
            nameservers:
                addresses:
                - 10.2.0.12
                search:
                - maas
            set-name: eno1
        eno2:
            match:
                macaddress: 24:6e:96:26:af:4d
            mtu: 1500
            set-name: eno2
        eno3:
            match:
                macaddress: 24:6e:96:26:af:4e
            mtu: 1500
            optional: true
            set-name: eno3
        eno4:
            match:
                macaddress: 24:6e:96:26:af:4f
            mtu: 1500
            set-name: eno4
        enp132s0f0:
            match:
                macaddress: a0:36:9f:c8:31:24
            mtu: 1500
            set-name: enp132s0f0
        enp132s0f1:
            match:
                macaddress: a0:36:9f:c8:31:26
            mtu: 1500
            set-name: enp132s0f1
        ibp129s0f0: {}
        ibp129s0f1: {}
        br-dummy0: {}
        br-dummy1: {}
    bonds:
        bond0:
            interfaces:
                - enp132s0f0
                - enp132s0f1
            parameters:
                mode: 802.3ad
                mii-monitor-interval: 1
    vlans:
        vlan101:
            id: 101
            link: bond0
        vlan102:
            id: 102
            link: bond0
        vlan103:
            id: 103
            link: bond0
    bridges:
        br-ex:
            interfaces: [eno2, br-dummy0]
            addresses: [${EX_ADDR}]
            nameservers:
                addresses: [8.8.8.8]
            routes:
                - to: 0.0.0.0/0
                  via: ${EX_GW_ADDR}
                  metric: 10
            dhcp4: no
            dhcp6: no
        br-mgmt:
            interfaces: [${VLAN_MGMT}]
            addresses: [${MGMT_ADDR}]
            dhcp4: no
            dhcp6: no
        br-storage:
            interfaces: [ibp129s0f0]
            addresses: [${STORAGE_ADDR}]
            mtu: ${MTU_STORAGE}
            dhcp4: no
            dhcp6: no
        br-vxlan:
            interfaces: [${VLAN_VXLAN}]
            addresses: [${VXLAN_ADDR}]
            dhcp4: no
            dhcp6: no
        br-replica:
            interfaces: [${VLAN_REPLICA}]
            addresses: [${REPLICA_ADDR}]
            dhcp4: no
            dhcp6: no
        br-vlan:
            interfaces: [bond0, br-dummy1]
            addresses: [${VLAN_ADDR}]
            dhcp4: no
            dhcp6: no
    version: 2
    "

    #echo "#-------------------------------------------------------------------"
    #echo "$NET_STR"

    cat << EOF > output/$NODE.net.conf
$NET_STR
EOF

}

function make_network_ironic2()
{
    EX_ADDR=$1
    EX_GW_ADDR=$2
    MGMT_ADDR=$3
    STORAGE_ADDR=$4
    VXLAN_ADDR=$5
    REPLICA_ADDR=$6
    VLAN_ADDR=$7
    NODE=$8

    NET_STR="# CONTROLLER $NODE : generated by devstack
#
# This file is generated from information provided by the datasource.  Changes
# to it will not persist across an instance reboot.  To disable cloud-init's
# network configuration capabilities, write a file
# /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg with the following:
# network: {config: disabled}
network:
    ethernets:
        eno1:
            addresses:
            - 10.2.0.205/24
            match:
                macaddress: 78:ac:44:08:87:84
            mtu: 1500
            nameservers:
                addresses:
                - 10.2.0.12
                search:
                - maas
            set-name: eno1
        eno2:
            match:
                macaddress: 78:ac:44:08:87:85
            mtu: 1500
            set-name: eno2
        eno3:
            match:
                macaddress: 78:ac:44:08:87:86
            mtu: 1500
            optional: true
            set-name: eno3
        eno4:
            match:
                macaddress: 78:ac:44:08:87:87
            mtu: 1500
            set-name: eno4
        enp136s0f0:
            match:
                macaddress: a0:36:9f:c2:ed:78
            mtu: 1500
            optional: true
            set-name: enp136s0f0
        enp136s0f1:
            match:
                macaddress: a0:36:9f:c2:ed:7a
            mtu: 1500
            optional: true
            set-name: enp136s0f1
        ibp191s0f0: {}
        ibp191s0f1: {}
        br-dummy0: {}
        br-dummy1: {}
    bonds:
        bond0:
            interfaces:
                - enp136s0f0 
                - enp136s0f1
            parameters:
                mode: 802.3ad
                mii-monitor-interval: 1
    vlans:
        vlan101:
            id: 101
            link: bond0
        vlan102:
            id: 102
            link: bond0
        vlan103:
            id: 103
            link: bond0
    bridges:
        br-ex:
            interfaces: [eno2, br-dummy0]
            addresses: [${EX_ADDR}]
            nameservers:
                addresses: [8.8.8.8]
            routes:
                - to: 0.0.0.0/0
                  via: ${EX_GW_ADDR}
                  metric: 10
            dhcp4: no
            dhcp6: no
        br-mgmt:
            interfaces: [${VLAN_MGMT}]
            addresses: [${MGMT_ADDR}]
            dhcp4: no
            dhcp6: no
        br-storage:
            interfaces: [enp129s0f0]
            addresses: [${STORAGE_ADDR}]
            mtu: ${MTU_STORAGE}
            dhcp4: no
            dhcp6: no
        br-vxlan:
            interfaces: [${VLAN_VXLAN}]
            addresses: [${VXLAN_ADDR}]
            dhcp4: no
            dhcp6: no
        br-replica:
            interfaces: [${VLAN_REPLICA}]
            addresses: [${REPLICA_ADDR}]
            dhcp4: no
            dhcp6: no
        br-vlan:
            interfaces: [bond0, br-dummy1]
            addresses: [${VLAN_ADDR}]
            dhcp4: no
            dhcp6: no
    version: 2
    "

    #echo "#-------------------------------------------------------------------"
    #echo "$NET_STR"

    cat << EOF > output/$NODE.net.conf
$NET_STR
EOF

}

